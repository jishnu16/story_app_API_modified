{
  "swagger": "2.0",
  "info": {
    "description": "API doc for Story API Application",
    "version": "1.0.0",
    "title": "API doc for Story API Application",
    "termsOfService": "http://swagger.io/terms/"
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/v1/register": {
      "post": {
        "summary": "Register a user",
        "description": "Return a registered user object on successful creation",
        "operationId": "register",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterRequest"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "Successfully Authenticated",
            "schema": {
              "$ref": "#/definitions/RegisterResponse"
            }
          }
        }
      }
    },

    "/v1/login": {
      "post": {
        "summary": "Login a user",
        "description": "Return a Valid user object along with auth token",
        "operationId": "login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Email."
          },
          "401": {
            "description": "Password is wrong."
          },
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "Successfully Authenticated and Getting token.",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          }
        }
      }
    },

    "/v1/stories": {
      "get": {
        "summary": "Get Story List",
        "description": "Get all stories which is created by a user. If user is admin then get all stories",
        "operationId": "getStoryList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "Stories Found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Story"
              }
            }
          }
        }
      },

      "post": {
        "summary": "Create Story",
        "description": "Create a new story",
        "operationId": "createStory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "creates story",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateStoryRequest"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "201": {
            "description": "Story got crated",
            "schema": {
              "$ref": "#/definitions/Story"
            }
          }
        }
      }
    },

    "/v1/stories/{id}": {
      "get": {
        "summary": "Get Story",
        "description": "Get story by id",
        "operationId": "getStory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "story id",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "Found Story",
            "schema": {
              "$ref": "#/definitions/Story"
            }
          }
        }
      },
      
      "put": {
        "summary": "Modify a story",
        "description": "Modify attributes of a story",
        "operationId": "updateStory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "creates story",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateStoryRequest"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "story id",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "Updated story",
            "schema": {
              "$ref": "#/definitions/Story"
            }
          }
        }
    }

    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "authorization"
    }
  },
  "definitions": {
    "RegisterRequest": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "user_type_id": {
          "type": "string"
        }
      }
    },
    "RegisterResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "user_type_id": {
          "type": "string"
        }
      }
    },

    "LoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "Story": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "complexity": {
          "type": "string"
        },
        "estimated_time_of_completion": {
          "type": "string"
        },
        "cost": {
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "created_by_user_id": {
          "type": "string"
        }
      }
    },
    "CreateStoryRequest": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "complexity": {
          "type": "string"
        },
        "estimated_time_of_completion": {
          "type": "string"
        },
        "cost": {
          "type": "integer"
        }
      }
    }
  }
}